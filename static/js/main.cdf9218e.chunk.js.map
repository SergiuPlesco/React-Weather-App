{"version":3,"sources":["views/components/ForecastNavigation.js","views/components/SearchBar.js","views/pages/Today.js","views/pages/Tomorrow.js","views/pages/Days.js","views/components/Header.js","userLocation.js","App.js","reportWebVitals.js","index.js"],"names":["ForecastNavigation","className","activeClassName","to","SearchBar","props","onSubmit","handleSubmit","type","name","id","placeholder","value","inputValue","onChange","getSearchInput","onFocus","e","target","select","Today","weatherDetails","useState","moment","tz","timezone","format","currentDate","setCurrentDate","useEffect","timerID","setInterval","clearInterval","geolocationErrorMessage","isLoading","error","Math","round","Number","daily","temp","max","min","current","feels_like","src","weather","icon","alt","description","toUpperCase","slice","Tomorrow","nextDayWeatherDetails","nextDayDate","Days","dailyForecast","map","day","index","onClick","nextElementSibling","classList","toggle","toggleDetails","add","charAt","wind_speed","humidity","uvi","unix","sunrise","sunset","Header","userLocation","navigator","geolocation","Promise","resolve","reject","getCurrentPosition","enableHighAccuracy","maximumAge","App","setGeolocationErrorMessage","submitedCity","setSubmitedCity","sessionActive","setSessionActive","setWeatherDetails","setNextDayWeatherDetails","setDailyForecast","city","setCity","setError","setIsLoading","setTz","setNextDayDate","getCity","a","process","cityURL","fetch","then","response","ok","Error","json","data","coord","catch","err","message","console","log","getCoord","lat","lon","coordURL","result","getWeatherDetails","oneCallURL","nextDay","nextDayData","sessionStorage","getItem","position","coords","latitude","longitude","code","preventDefault","setItem","basename","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cdf9218e.chunk.js","sourcesContent":["import { NavLink } from \"react-router-dom\";\r\n\r\nconst ForecastNavigation = () => {\r\n\treturn (\r\n\t\t<div className=\"forecast\">\r\n\t\t\t<NavLink className=\"forecast-link\" activeClassName=\"active\" to=\"/today\">\r\n\t\t\t\t<p>Today</p>\r\n\t\t\t</NavLink>\r\n\t\t\t<NavLink className=\"forecast-link\" activeClassName=\"active\" to=\"/tomorrow\">\r\n\t\t\t\t<p>Tomorrow</p>\r\n\t\t\t</NavLink>\r\n\t\t\t<NavLink className=\"forecast-link\" activeClassName=\"active\" to=\"/sevendays\">\r\n\t\t\t\t<p>7 Days</p>\r\n\t\t\t</NavLink>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ForecastNavigation;\r\n","const SearchBar = (props) => {\r\n\treturn (\r\n\t\t<div className=\"search-bar\">\r\n\t\t\t<form onSubmit={props.handleSubmit}>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tname=\"searchText\"\r\n\t\t\t\t\tid=\"searchText\"\r\n\t\t\t\t\tplaceholder=\"Search places...\"\r\n\t\t\t\t\tvalue={props.inputValue}\r\n\t\t\t\t\tonChange={props.getSearchInput}\r\n\t\t\t\t\tonFocus={(e) => {\r\n\t\t\t\t\t\te.target.select();\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default SearchBar;\r\n","import { useEffect, useState } from \"react\";\r\nimport moment from \"moment-timezone\";\r\n\r\nconst Today = (props) => {\r\n\tconst weatherDetails = props.weatherDetails;\r\n\tconst [currentDate, setCurrentDate] = useState(\r\n\t\tmoment.tz(props.timezone).format(\"DD MMMM, HH:mm:ss\")\r\n\t);\r\n\r\n\t/**\r\n\t * Update the clock every second\r\n\t */\r\n\tuseEffect(() => {\r\n\t\tconst timerID = setInterval(() => {\r\n\t\t\tsetCurrentDate(moment.tz(props.timezone).format(\"DD MMMM, HH:mm:ss\"));\r\n\t\t}, 1000);\r\n\t\treturn () => {\r\n\t\t\tclearInterval(timerID);\r\n\t\t};\r\n\t}, [props.timezone]);\r\n\r\n\treturn (\r\n\t\t<div className=\"container\">\r\n\t\t\t{/* If location denied */}\r\n\t\t\t{props.geolocationErrorMessage && (\r\n\t\t\t\t<div>{props.geolocationErrorMessage}, search places...</div>\r\n\t\t\t)}\r\n\t\t\t{/* If is loading */}\r\n\t\t\t{props.isLoading && <div>Loading...</div>}\r\n\t\t\t{/* If there is an error */}\r\n\t\t\t{props.error && <div>{props.error}...</div>}\r\n\t\t\t{/* If weather details are available */}\r\n\t\t\t{weatherDetails && (\r\n\t\t\t\t<div className=\"conditions\">\r\n\t\t\t\t\t<div className=\"date-time\">\r\n\t\t\t\t\t\t<p className=\"date\">{currentDate}</p>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"minmax-wrapper\">\r\n\t\t\t\t\t\t<span className=\"max\">\r\n\t\t\t\t\t\t\tDay {weatherDetails && Math.round(Number(weatherDetails.daily[0].temp.max))}\r\n\t\t\t\t\t\t\t&#730;&#8593; -{\" \"}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<span className=\"min\">\r\n\t\t\t\t\t\t\tNight {weatherDetails && Math.round(Number(weatherDetails.daily[0].temp.min))}\r\n\t\t\t\t\t\t\t&#730;&#8595;\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"weather-details\">\r\n\t\t\t\t\t\t<div className=\"degrees\">\r\n\t\t\t\t\t\t\t<p className=\"number\">\r\n\t\t\t\t\t\t\t\t{weatherDetails && Math.round(Number(weatherDetails.current.temp))}\r\n\t\t\t\t\t\t\t\t&#730;C\r\n\t\t\t\t\t\t\t</p>\r\n\r\n\t\t\t\t\t\t\t<p className=\"feels-like\">\r\n\t\t\t\t\t\t\t\tFeels like {weatherDetails && Math.round(Number(weatherDetails.current.feels_like))}\r\n\t\t\t\t\t\t\t\t&#730;\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"image\">\r\n\t\t\t\t\t\t\t<div className=\"icon\">\r\n\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\tsrc={`https://openweathermap.org/img/wn/${\r\n\t\t\t\t\t\t\t\t\t\tweatherDetails && weatherDetails.current.weather[0].icon\r\n\t\t\t\t\t\t\t\t\t}@4x.png`}\r\n\t\t\t\t\t\t\t\t\talt=\"icon\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<p className=\"description\">\r\n\t\t\t\t\t\t\t\t{weatherDetails.current.weather[0].description[0].toUpperCase() +\r\n\t\t\t\t\t\t\t\t\tweatherDetails.current.weather[0].description.slice(1)}\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Today;\r\n","import React from \"react\";\r\n\r\nconst Tomorrow = (props) => {\r\n\tconst nextDayWeatherDetails = props.nextDayWeatherDetails;\r\n\tconst description = nextDayWeatherDetails ? nextDayWeatherDetails.weather[0].description : \"\";\r\n\r\n\treturn (\r\n\t\t<div className=\"container\">\r\n\t\t\t{/* If location denied */}\r\n\t\t\t{props.geolocationErrorMessage && (\r\n\t\t\t\t<div>{props.geolocationErrorMessage}, search places...</div>\r\n\t\t\t)}\r\n\t\t\t{/* If is loading */}\r\n\t\t\t{props.isLoading && <div>Loading...</div>}\r\n\t\t\t{/* If there is an error */}\r\n\t\t\t{props.error && <div>{props.error}...</div>}\r\n\t\t\t{/* If weather details are available */}\r\n\t\t\t{nextDayWeatherDetails && (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div className=\"date-time\">\r\n\t\t\t\t\t\t<span className=\"date\">{props.nextDayDate}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"tomorrow-wrapper\">\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<div className=\"minmax-wrapper\">\r\n\t\t\t\t\t\t\t\t<span className=\"max\">\r\n\t\t\t\t\t\t\t\t\tDay {nextDayWeatherDetails && Math.round(Number(nextDayWeatherDetails.temp.max))}\r\n\t\t\t\t\t\t\t\t\t&#730;&#8593; -{\" \"}\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t<span className=\"min\">\r\n\t\t\t\t\t\t\t\t\tNight{\" \"}\r\n\t\t\t\t\t\t\t\t\t{nextDayWeatherDetails && Math.round(Number(nextDayWeatherDetails.temp.min))}\r\n\t\t\t\t\t\t\t\t\t&#730;&#8595;\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<p className=\"description\">{description[0].toUpperCase() + description.slice(1)}</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"image\">\r\n\t\t\t\t\t\t\t<div className=\"icon\">\r\n\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\tsrc={`http://openweathermap.org/img/wn/${nextDayWeatherDetails.weather[0].icon}@4x.png`}\r\n\t\t\t\t\t\t\t\t\talt=\"icon\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Tomorrow;\r\n","import React from \"react\";\r\nimport moment from \"moment-timezone\";\r\n\r\nconst Days = (props) => {\r\n\tconst dailyForecast = props.dailyForecast;\r\n\r\n\tconst toggleDetails = (e) => {\r\n\t\te.target.nextElementSibling.classList.toggle(\"show\");\r\n\t\t// console.log(e.target);\r\n\t};\r\n\treturn (\r\n\t\t<div className=\"container\">\r\n\t\t\t{props.geolocationErrorMessage && (\r\n\t\t\t\t<div>{props.geolocationErrorMessage}, search places...</div>\r\n\t\t\t)}\r\n\t\t\t{props.isLoading && <div>Loading...</div>}\r\n\t\t\t{props.error && <div>{props.error}...</div>}\r\n\t\t\t{dailyForecast &&\r\n\t\t\t\tdailyForecast.map((day, index) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div className=\"daily-forecast\" key={index}>\r\n\t\t\t\t\t\t\t<div className=\"summary\" onClick={(e) => toggleDetails(e)}>\r\n\t\t\t\t\t\t\t\t<div className=\"summary-title\">\r\n\t\t\t\t\t\t\t\t\t<p className=\"weekday\">\r\n\t\t\t\t\t\t\t\t\t\t{index === 0\r\n\t\t\t\t\t\t\t\t\t\t\t? \"Today\"\r\n\t\t\t\t\t\t\t\t\t\t\t: `${moment().tz(props.timezone).add(index, \"days\").format(\"dddd, DD MMMM\")}`}\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t<p className=\"weekday-description\">\r\n\t\t\t\t\t\t\t\t\t\t{dailyForecast &&\r\n\t\t\t\t\t\t\t\t\t\t\tday.weather[0].description.charAt(0).toUpperCase() +\r\n\t\t\t\t\t\t\t\t\t\t\t\tday.weather[0].description.slice(1)}\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"summary-icon\">\r\n\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\tsrc={`http://openweathermap.org/img/wn/${day.weather[0].icon}@2x.png`}\r\n\t\t\t\t\t\t\t\t\t\talt=\"icon\"\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<div className=\"summary-temp\">\r\n\t\t\t\t\t\t\t\t\t\t<p>{Math.round(Number(day.temp.max))}&#730;</p>\r\n\t\t\t\t\t\t\t\t\t\t<p>{Math.round(Number(day.temp.min))}&#730;</p>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"details\">\r\n\t\t\t\t\t\t\t\t<table>\r\n\t\t\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t<td className=\"details-title\">Wind:</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td className=\"details-value\">{day.wind_speed} km/h</td>\r\n\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t<td className=\"details-title\">Humidity:</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td className=\"details-value\">{day.humidity}%</td>\r\n\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t<td className=\"details-title\">UV Index:</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td className=\"details-value\">{Math.round(Number(day.uvi))}</td>\r\n\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t<td className=\"details-title\">Sunrise/sunset:</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td className=\"details-value\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t{`${moment.unix(Number(day.sunrise)).tz(props.timezone).format(\"HH:mm\")}`},\r\n\t\t\t\t\t\t\t\t\t\t\t\t{`${moment.unix(Number(day.sunset)).tz(props.timezone).format(\"HH:mm\")}`}\r\n\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Days;\r\n","import React from \"react\";\r\n\r\nconst Header = () => {\r\n\treturn (\r\n\t\t<header className=\"header\">\r\n\t\t\t<p>Weather App</p>\r\n\t\t</header>\r\n\t);\r\n};\r\n\r\nexport default Header;\r\n","/**\r\n * Get user coordinates\r\n * @returns Promise with user coordinates\r\n */\r\nconst userLocation = () => {\r\n\tif (navigator.geolocation) {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tconst options = {\r\n\t\t\t\tenableHighAccuracy: true,\r\n\t\t\t\tmaximumAge: 30000,\r\n\t\t\t};\r\n\t\t\tnavigator.geolocation.getCurrentPosition(resolve, reject, options);\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport default userLocation;\r\n","import { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Redirect, HashRouter } from \"react-router-dom\";\nimport \"./App.css\";\nimport ForecastNavigation from \"./views/components/ForecastNavigation\";\nimport SearchBar from \"./views/components/SearchBar\";\nimport Today from \"./views/pages/Today\";\nimport Tomorrow from \"./views/pages/Tomorrow\";\nimport Days from \"./views/pages/Days\";\nimport moment from \"moment-timezone\";\nimport Header from \"./views/components/Header\";\nimport userLocation from \"./userLocation\";\n\nfunction App() {\n\tconst [geolocationErrorMessage, setGeolocationErrorMessage] = useState();\n\tconst [submitedCity, setSubmitedCity] = useState(\"\");\n\tconst [sessionActive, setSessionActive] = useState(\"false\");\n\n\tconst [weatherDetails, setWeatherDetails] = useState(null);\n\tconst [nextDayWeatherDetails, setNextDayWeatherDetails] = useState(null);\n\tconst [dailyForecast, setDailyForecast] = useState(null);\n\tconst [city, setCity] = useState(\"\");\n\t/**\n\t * Set errors and loading for every component separately\n\t */\n\tconst [error, setError] = useState(null);\n\tconst [isLoading, setIsLoading] = useState(true);\n\n\t/**\n\t * Timezone, Date and Time\n\t */\n\tconst [tz, setTz] = useState();\n\tconst [nextDayDate, setNextDayDate] = useState(null);\n\n\tconst getCity = async (city) => {\n\t\tconst APIKEY = process.env.REACT_APP_API_KEY;\n\t\tconst cityURL = `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${APIKEY}`;\n\t\tconst coord = await fetch(cityURL)\n\t\t\t.then((response) => {\n\t\t\t\tif (!response.ok) {\n\t\t\t\t\tthrow Error(\"could not fetch, error in cityURL, please enter a city name.\");\n\t\t\t\t}\n\t\t\t\treturn response.json();\n\t\t\t})\n\t\t\t.then((data) => {\n\t\t\t\tsetCity(data.name);\n\t\t\t\treturn data.coord;\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tsetError(err.message);\n\t\t\t\tconsole.log(\"no city\");\n\t\t\t});\n\t\treturn coord;\n\t};\n\n\tconst getCoord = async (lat, lon) => {\n\t\tconst APIKEY = process.env.REACT_APP_API_KEY;\n\t\tconst coordURL = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${APIKEY}`;\n\t\tconst result = await fetch(coordURL)\n\t\t\t.then((response) => {\n\t\t\t\tif (!response.ok) {\n\t\t\t\t\tthrow Error(\"Could not fetch coord URL\");\n\t\t\t\t}\n\t\t\t\treturn response.json();\n\t\t\t})\n\t\t\t.then((data) => {\n\t\t\t\tsetCity(data.name);\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(`${err.message}`);\n\t\t\t});\n\t\treturn result;\n\t};\n\n\tconst getWeatherDetails = (lat, lon) => {\n\t\tconst APIKEY = process.env.REACT_APP_API_KEY;\n\t\tconst oneCallURL = `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&units=metric&appid=${APIKEY}`;\n\t\tfetch(oneCallURL)\n\t\t\t.then((response) => {\n\t\t\t\tif (!response.ok) {\n\t\t\t\t\tthrow Error(\"Could not fetch data from one call URL\");\n\t\t\t\t}\n\t\t\t\treturn response.json();\n\t\t\t})\n\t\t\t.then((data) => {\n\t\t\t\tsetWeatherDetails(data);\n\t\t\t\tconst nextDay = moment().tz(data.timezone).add(1, \"days\").format(\"dddd, DD MMMM\");\n\t\t\t\tsetNextDayDate(nextDay);\n\t\t\t\tsetTz(data.timezone);\n\t\t\t\tsetGeolocationErrorMessage(null);\n\t\t\t\tsetError(null);\n\t\t\t\tsetIsLoading(false);\n\t\t\t\tconsole.log(data);\n\t\t\t\treturn data.daily;\n\t\t\t})\n\t\t\t.then((daily) => {\n\t\t\t\tsetDailyForecast(daily);\n\t\t\t\treturn daily[1];\n\t\t\t})\n\t\t\t.then((nextDayData) => {\n\t\t\t\tsetNextDayWeatherDetails(nextDayData);\n\t\t\t\tsetError(null);\n\t\t\t\tsetIsLoading(false);\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(`${err.message} `);\n\t\t\t\tsetError(err.message);\n\t\t\t});\n\t};\n\t/**\n\t * If session active, city remains the same on browser refresh and current window session\n\t */\n\tconst handleSession = () => {\n\t\tsetSessionActive(!sessionActive);\n\t\tsessionStorage.setItem(\"active\", `${sessionActive ? \"active\" : \"active\"}`);\n\t};\n\t/**\n\t * Handle form submit\n\t * Store the value on sessionStorage to be used in current session\n\t */\n\n\tfunction handleSubmit(e) {\n\t\te.preventDefault();\n\t\thandleSession();\n\t\tsessionStorage.setItem(\"city\", city);\n\t\tsetSubmitedCity(city);\n\t}\n\n\t/**\n\t * Handle search input\n\t * Show typed value\n\t */\n\tfunction getSearchInput(e) {\n\t\tsetCity(e.target.value);\n\t}\n\n\tuseEffect(() => {\n\t\t/**\n\t\t * Get weather data for user's location if permision allowed\n\t\t */\n\t\tif (!sessionStorage.getItem(\"active\")) {\n\t\t\tuserLocation()\n\t\t\t\t.then((position) => {\n\t\t\t\t\tconst lat = position.coords.latitude;\n\t\t\t\t\tconst lon = position.coords.longitude;\n\n\t\t\t\t\tgetCoord(lat, lon);\n\t\t\t\t\tgetWeatherDetails(lat, lon);\n\t\t\t\t\tsetGeolocationErrorMessage(null);\n\t\t\t\t})\n\t\t\t\t.catch((err) => {\n\t\t\t\t\tconsole.log(err.code);\n\t\t\t\t\tsetGeolocationErrorMessage(err.message);\n\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t});\n\t\t}\n\t\t/**\n\t\t * Get weather details for searched city\n\t\t * Runs on input submit\n\t\t */\n\t\tif (sessionStorage.getItem(\"active\")) {\n\t\t\tgetCity(sessionStorage.getItem(\"city\"))\n\t\t\t\t.then((coord) => {\n\t\t\t\t\tgetWeatherDetails(coord.lat, coord.lon);\n\t\t\t\t\tconsole.log(\"object\");\n\t\t\t\t})\n\t\t\t\t.catch((err) => {\n\t\t\t\t\tconsole.log(err.message);\n\t\t\t\t});\n\t\t}\n\t}, [submitedCity]);\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Header />\n\t\t\t<SearchBar inputValue={city} getSearchInput={getSearchInput} handleSubmit={handleSubmit} />\n\t\t\t<HashRouter basename=\"/\">\n\t\t\t\t<ForecastNavigation />\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path=\"/\" exact>\n\t\t\t\t\t\t<Redirect to=\"/today\" />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/today\">\n\t\t\t\t\t\t<Today\n\t\t\t\t\t\t\tisLoading={isLoading}\n\t\t\t\t\t\t\tgeolocationErrorMessage={geolocationErrorMessage}\n\t\t\t\t\t\t\terror={error}\n\t\t\t\t\t\t\tweatherDetails={weatherDetails}\n\t\t\t\t\t\t\ttimezone={tz}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/tomorrow\">\n\t\t\t\t\t\t<Tomorrow\n\t\t\t\t\t\t\tisLoading={isLoading}\n\t\t\t\t\t\t\tgeolocationErrorMessage={geolocationErrorMessage}\n\t\t\t\t\t\t\terror={error}\n\t\t\t\t\t\t\tnextDayDate={nextDayDate}\n\t\t\t\t\t\t\tnextDayWeatherDetails={nextDayWeatherDetails}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/sevendays\">\n\t\t\t\t\t\t<Days\n\t\t\t\t\t\t\tisLoading={isLoading}\n\t\t\t\t\t\t\tgeolocationErrorMessage={geolocationErrorMessage}\n\t\t\t\t\t\t\terror={error}\n\t\t\t\t\t\t\tdailyForecast={dailyForecast}\n\t\t\t\t\t\t\ttimezone={tz}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Route>\n\t\t\t\t</Switch>\n\t\t\t</HashRouter>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}